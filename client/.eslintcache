[{"C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\reportWebVitals.js":"1","C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\App.js":"2","C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\Bets.js":"3","C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\CreateMarket.js":"4","C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\generate-meta-evidence.js":"5","C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\ipfs-publish.js":"6","C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\Betslip.js":"7","C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\index.js":"8"},{"size":362,"mtime":1607899067907,"results":"9","hashOfConfig":"10"},{"size":21194,"mtime":1608117244322,"results":"11","hashOfConfig":"10"},{"size":6285,"mtime":1608113488544,"results":"12","hashOfConfig":"10"},{"size":5460,"mtime":1608117223992,"results":"13","hashOfConfig":"10"},{"size":321,"mtime":1607943214779,"results":"14","hashOfConfig":"10"},{"size":898,"mtime":1607899484951,"results":"15","hashOfConfig":"10"},{"size":8117,"mtime":1608056288701,"results":"16","hashOfConfig":"10"},{"size":517,"mtime":1608117098022,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qmijev",{"filePath":"20","messages":"21","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\App.js",["38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58"],"C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\Bets.js",["59","60","61","62","63","64","65","66","67","68"],"import React, {Component} from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport {List, ListItem} from '@material-ui/core'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst months = ['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC']\r\n\r\nfunction returnFormattedTime(unix) {\r\n  var date = new Date(unix*1000)\r\n  var day = date.getDate()\r\n  var month = months[date.getMonth()]\r\n  var year = date.getFullYear()\r\n  var hours = date.getHours()\r\n  var mins = (date.getMinutes()<10?'0'+date.getMinutes():date.getMinutes())\r\n  var secs = (date.getSeconds()<10?'0'+date.getSeconds():date.getSeconds())\r\n  return day+\" \"+month+\" \"+year+\" \"+hours+\":\"+mins+\":\"+secs\r\n}\r\n\r\n\r\nclass BetCard extends Component {\r\n  constructor(props) {\r\n    super()\r\n    this.state = {\r\n      openBet: true,\r\n      currentBet: 0,\r\n      timestamp: 0\r\n    }\r\n  }\r\n\r\n  renderOutcome(resultTime,outcome,options) {\r\n    let timestamp = (Date.now())/1000\r\n    if(timestamp > resultTime) {\r\n      if(outcome == 0) {\r\n        return(<Typography> Waiting for outcome to be set..</Typography>)\r\n      } else {\r\n        return(<Typography> Outcome: {options[(outcome>>1)]} </Typography>)\r\n      }\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n\r\n  renderBettingTime(endTime) {\r\n    let timestamp = (Date.now())/1000\r\n    if(timestamp > endTime) {\r\n      return(<Typography>Betting finished.</Typography>)\r\n    } else {\r\n      return(<Typography>End of betting: {returnFormattedTime(endTime)}</Typography>)\r\n    }\r\n  }\r\n\r\n  renderSetOutcome(account,eventowner,resultTime,outcome,kid) {\r\n    let timestamp = (Date.now())/1000\r\n    console.log(account)\r\n    console.log(eventowner)\r\n    if((timestamp > resultTime) && account==eventowner && outcome==0) {\r\n      return(<ListItem button id={kid} label=\"Set Outcome\" onClick={this.handleOpenSetOutcome} >Set outcome</ListItem>)\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n\r\n  renderDisputeAnswer(resultTime,kid) {\r\n    let timestamp = (Date.now())/1000\r\n    if(timestamp > resultTime) {\r\n      return ''//return(<ListItem button id={kid}>Dispute Answer (Disabled for test)</ListItem>)\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n\r\n  renderClaimReward(state) {\r\n    if(state == 4) {\r\n      return(<ListItem button>Claim reward</ListItem>)\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n\r\n  handleDispute = (e) => {\r\n    this.props.handleDispute(e,parseInt(e.target.id))\r\n  }\r\n\r\n  handleOpen = (e) => {\r\n    if(((Date.now())/1000) < this.props.state.eventData[this.props.id].endTime) {\r\n      this.props.handleOpen(e,this.props.id,parseInt(e.target.id))\r\n    }\r\n  }\r\n\r\n  handleOpenSetOutcome = (e) => {\r\n    this.props.handleOpenSetOutcome(e,e.target.id)\r\n  }\r\n\r\n  render() {\r\n    var eventData = this.props.state.eventData[this.props.id]\r\n    return(\r\n      <div>\r\n      <Typography>{eventData.description}</Typography>\r\n      <List>\r\n      {\r\n        eventData.options.map((option,key) => {\r\n          return(\r\n            <ListItem button id={key} onClick={this.handleOpen}>{eventData.options[key]}: {eventData.price[key]} </ListItem>\r\n          )\r\n        })\r\n      }\r\n      </List>\r\n      {this.renderOutcome(eventData.resultTime,eventData.outcome,eventData.options)}\r\n      {this.renderBettingTime(eventData.endTime)}\r\n      <List>\r\n      {this.renderSetOutcome(this.props.state.account,eventData.owner,eventData.resultTime,eventData.outcome,this.props.id)}\r\n      {this.renderDisputeAnswer(eventData.resultTime,this.props.id)}\r\n      {this.renderClaimReward(eventData.state)}\r\n      </List>\r\n    </div>)\r\n  }\r\n}\r\n\r\nclass Bets extends Component {\r\n  constructor(props) {\r\n    super()\r\n  }\r\n\r\n  handleClose = (e) => {\r\n    this.props.handleClose()\r\n  }\r\n\r\n  handleSetOutcome = (e) => {\r\n    this.props.handleSetOutcome(e,parseInt(e.target.id))\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    this.props.handlePlaceBet()\r\n  }\r\n\r\n  render() {\r\n    if(this.props.state.eventData.length==0) {\r\n      return(\r\n        <Container>\r\n          <img style={{ width: \"100%\"}} src=\"active_markets.png\" />\r\n          <CardMedia style={{ height: \"200px\" }} image=\"/market2.jpg\" />\r\n          <div> No events </div>\r\n        </Container>\r\n      )\r\n    } else {\r\n      return(\r\n        <Container>\r\n        <Dialog open={this.props.openSetOutcome} onClose={this.props.handleCloseSetOutcome} scroll='body'>\r\n        <img style={{ width: \"100%\"}} src=\"set_outcome.png\" alt= \"set outcome\"/>\r\n        <Typography>{this.props.state.eventData[this.props.state.openSetOutcomeBet].title}</Typography>\r\n        <Typography>{this.props.state.eventData[this.props.state.openSetOutcomeBet].description}</Typography>\r\n        <List>\r\n        {\r\n          this.props.state.eventData[this.props.state.openSetOutcomeBet].options.map((option,key) => {\r\n            return(\r\n              <ListItem button id={key} onClick={this.handleSetOutcome}>{option}</ListItem>\r\n            )\r\n          })\r\n        }\r\n        </List>\r\n        </Dialog>\r\n        <img style={{ width: \"100%\"}} src=\"active_markets.png\" />\r\n        <CardMedia style={{ height: \"200px\" }} image=\"/market2.jpg\" />\r\n        <div>\r\n        {\r\n          this.props.state.eventData.map((bet,key) => {\r\n            return(\r\n              <Accordion>\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}> {this.props.state.eventData[key].title} </AccordionSummary>\r\n                <AccordionDetails> <BetCard id={key} key={this.props.state.eventData.id} state={this.props.state} handleDispute={this.props.handleDispute} handleOpenSetOutcome={this.props.handleOpenSetOutcome} handleOpen={this.props.handleOpen} /> </AccordionDetails>\r\n              </Accordion>\r\n            )\r\n          })\r\n        }\r\n        </div>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Bets\r\n",["69","70"],"C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\CreateMarket.js",[],"C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\generate-meta-evidence.js",["71"],"export default (title,category,description,question,options,payer) => ({\r\n  category: category,\r\n  title: title,\r\n  description: description,\r\n  question: question,\r\n  rulingOptions: {\r\n    type: 'single-select',\r\n    titles: options,\r\n    descriptions: options\r\n  },\r\n  aliases: {\r\n    [payer]: 'Market Maker'\r\n  }\r\n})\r\n","C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\ipfs-publish.js",[],"C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\Betslip.js",["72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93"],"import React, {Component} from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Container from '@material-ui/core/Container'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport {List, ListItem,CardMedia} from '@material-ui/core'\r\nimport {PropTypes} from 'react'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nvar BN = require('ethers').BigNumber\r\n\r\nfunction parseOutcome(options,outcome) {\r\n  var num = options.length\r\n  var output = \"\"\r\n  for(var i=0;i<num;i++) {\r\n    if((outcome & (1<<i)) == 0 ) {\r\n      continue\r\n    } else {\r\n      if(output==\"\") {\r\n        output = options[i]\r\n      } else {\r\n        output = output + \"|\" + options[i]\r\n      }\r\n    }\r\n  }\r\n  return output\r\n}\r\n\r\nfunction tryParseComboBet(state, id, amount) {\r\n  var output = \"\"\r\n  var eventarray = []\r\n  var outcomearray = []\r\n  state.comboPositions.map((comboPositions,koComboPositions) => {\r\n    if(BN.from(id).eq(BN.from(comboPositions.position))) {\r\n      eventarray = comboPositions.addresses\r\n      outcomearray = comboPositions.outcomes\r\n    }\r\n  })\r\n  eventarray.map((event,koEvent) => {\r\n    var index = state.eventData.map(function(o) {return o.address;}).indexOf(event)\r\n    output += state.eventData[index].title.toUpperCase()+\"(\"+parseOutcome(state.eventData[index].options,outcomearray[koEvent])+\") \"\r\n  })\r\n  return (\r\n      <div>${amount}: {output}</div>\r\n    )\r\n}\r\n\r\nclass BetPositions extends Component {\r\n  constructor(props) {\r\n    super()\r\n  }\r\n  render() {\r\n    return(\r\n      <div>\r\n        Your Positions:\r\n        {this.props.state.positions.map((bet,key) => {\r\n          var betevent = -1\r\n          var betoutcome = -1\r\n          this.props.state.singlePositionId.map((positions,a) => {\r\n            positions.positions.map((position,b) => {\r\n              if(position.position == bet.id) {\r\n                betevent = positions.address\r\n                betoutcome = position.outcome\r\n              }\r\n            })\r\n          })\r\n          if(betevent!=-1) {\r\n            var i =this.props.state.eventData.map(function(o) {return o.address;}).indexOf(betevent)\r\n            var title = this.props.state.eventData[i].title\r\n            var outcome = parseOutcome(this.props.state.eventData[i].options,betoutcome)\r\n            return(\r\n              <div>\r\n              ${bet.amount}: {title}({outcome})\r\n              </div>\r\n            )\r\n          } else {\r\n            {return(tryParseComboBet(this.props.state, bet.id, bet.amount))}\r\n          }\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Betslip extends Component {\r\n  constructor(props) {\r\n    super()\r\n  }\r\n\r\n  handleRemoveBet = (e) => {\r\n    if(e.target.id == \"\") {} else {\r\n      this.props.handleRemoveBet(e.target.id)\r\n    }\r\n  }\r\n\r\n  containedIfIndex = (a,k,b) => {\r\n    if((a & (1<<k)) == 0) {\r\n      return \"outlined\"\r\n    } else {\r\n      return \"contained\"\r\n    }\r\n  }\r\n\r\n  alterBet = (e,k,key) => {\r\n    this.props.alterBet(key,k)\r\n  }\r\n\r\n  render() {\r\n    if(this.props.state.betslip.length==0) {\r\n      return(\r\n        <Container>\r\n        <img style={{ width: \"100%\"}} src=\"dispute_outcome.png\" />\r\n        <CardMedia style={{ height: \"200px\" }} image=\"/court.png\" />\r\n          <BetPositions state={this.props.state} />\r\n        </Container>\r\n      )\r\n    } else if(this.props.state.betslip.length==1) {\r\n      return(\r\n        <Container>\r\n        <img style={{ width: \"100%\"}} src=\"dispute_outcome.png\" />\r\n        <CardMedia style={{ height: \"200px\" }} image=\"/court.png\" />\r\n        <div>\r\n          <BetPositions state={this.props.state} />\r\n        <List>\r\n        {this.props.state.betslip.map((bet, key)=> {\r\n          return(\r\n            <ListItem>\r\n              <Container>\r\n              <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\" id={key} onClick={this.handleRemoveBet}>\r\n                <CancelIcon style = {{color: \"#ED1C24\"}} id={key}/>\r\n              </IconButton>\r\n              {this.props.state.eventData[this.props.state.eventData.map(function(o) {return o.address;}).indexOf(bet.event)].title}\r\n              <div>\r\n                <ButtonGroup color=\"primary\" >\r\n                {this.props.state.eventData[this.props.state.eventData.map(function(o) {return o.address;}).indexOf(bet.event)].price.map((p,k) => {\r\n                  return(\r\n                    <Button onClick={e => this.alterBet(e,k,key)}\r\n                    variant={this.containedIfIndex(bet.outcome,k,this.props.state.eventData[this.props.state.eventData.map(function(o) {return o.address;}).indexOf(bet.event)].price.length)}> {this.props.state.eventData[this.props.state.eventData.map(function(o) {return o.address;}).indexOf(bet.event)].options[k]}:${p} </Button>\r\n                  )\r\n                })}\r\n                </ButtonGroup>\r\n              </div>\r\n              </Container>\r\n            </ListItem>\r\n          )\r\n        })}\r\n        </List>\r\n        </div>\r\n        <div>\r\n          <TextField label=\"Outcome tokens to buy\" fullWidth value={this.props.state.quotedAmount} onChange={this.props.handleChangePurchaseSingleSize}></TextField>\r\n          <TextField label=\"Price\" fullWidth value={this.props.state.quotedPrice}></TextField>\r\n          <Button colour=\"primary\" onClick={this.props.handleSingleSubmit} type=\"submit\" size=\"large\" style = {{backgroundColor: \"#ED1C24\", color : \"#FFFFFF\"}}  variant=\"contained\" component=\"span\" > Submit single bet </Button>\r\n        </div>\r\n\r\n        </Container>\r\n      )\r\n    } else {\r\n      return(\r\n        <Container>\r\n        <img style={{ width: \"100%\"}} src=\"dispute_outcome.png\" />\r\n        <CardMedia style={{ height: \"200px\" }} image=\"/court.png\" />\r\n        <div>\r\n          <BetPositions state={this.props.state}/>\r\n        <List>\r\n        {this.props.state.betslip.map((bet, key)=> {\r\n          return(\r\n            <ListItem>\r\n              <Container>\r\n              <IconButton color=\"primary\" component=\"span\" id={key} onClick={this.handleRemoveBet}>\r\n                <CancelIcon style = {{color: \"#ED1C24\"}} id={key}/>\r\n              </IconButton>\r\n              {this.props.state.eventData[this.props.state.eventData.map(function(o) {return o.address;}).indexOf(bet.event)].title}\r\n              <div>\r\n                <ButtonGroup color=\"primary\" >\r\n                {this.props.state.eventData[this.props.state.eventData.map(function(o) {return o.address;}).indexOf(bet.event)].price.map((p,k) => {\r\n                  return(\r\n                    <Button onClick={e => this.alterBet(e,k,key)}\r\n                    variant={this.containedIfIndex(bet.outcome,k,this.props.state.eventData[this.props.state.eventData.map(function(o) {return o.address;}).indexOf(bet.event)].price.length)}> {this.props.state.eventData[this.props.state.eventData.map(function(o) {return o.address;}).indexOf(bet.event)].options[k]}:${p} </Button>\r\n                  )\r\n                })}\r\n                </ButtonGroup>\r\n              </div>\r\n              </Container>\r\n            </ListItem>\r\n          )\r\n        })}\r\n        </List>\r\n        </div>\r\n        <div>\r\n          <TextField label=\"Outcome tokens to buy\" fullWidth onChange={this.props.handleChangePurchaseComboSize} value={this.props.state.quotedAmount}></TextField>\r\n          <TextField label=\"Price\" fullWidth value={this.props.state.quotedPrice}></TextField>\r\n          <Button onClick = {this.props.handleComboSubmit} colour=\"primary\" type=\"submit\" size=\"large\" style = {{backgroundColor: \"#ED1C24\", color : \"#FFFFFF\"}}  variant=\"contained\" component=\"span\" > Submit {\"C-\".repeat(this.props.state.betslip.length-1)}COMBO bet </Button>\r\n        </div>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Betslip\r\n","C:\\Users\\Abdulla\\apps\\CTF\\client\\src\\index.js",[],{"ruleId":"94","severity":1,"message":"95","line":13,"column":8,"nodeType":"96","messageId":"97","endLine":13,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":218,"column":21,"nodeType":"100","messageId":"101","endLine":218,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":222,"column":37,"nodeType":"104","messageId":"105","endLine":222,"endColumn":39},{"ruleId":"98","severity":1,"message":"99","line":223,"column":20,"nodeType":"100","messageId":"101","endLine":223,"endColumn":22},{"ruleId":"98","severity":1,"message":"99","line":233,"column":23,"nodeType":"100","messageId":"101","endLine":233,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":249,"column":41,"nodeType":"100","messageId":"101","endLine":249,"endColumn":43},{"ruleId":"102","severity":1,"message":"103","line":261,"column":41,"nodeType":"104","messageId":"105","endLine":261,"endColumn":43},{"ruleId":"98","severity":1,"message":"99","line":262,"column":23,"nodeType":"100","messageId":"101","endLine":262,"endColumn":25},{"ruleId":"102","severity":1,"message":"106","line":317,"column":39,"nodeType":"104","messageId":"107","endLine":317,"endColumn":41},{"ruleId":"98","severity":1,"message":"99","line":318,"column":21,"nodeType":"100","messageId":"101","endLine":318,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":389,"column":43,"nodeType":"104","messageId":"105","endLine":389,"endColumn":45},{"ruleId":"102","severity":1,"message":"103","line":394,"column":33,"nodeType":"104","messageId":"105","endLine":394,"endColumn":35},{"ruleId":"98","severity":1,"message":"99","line":407,"column":29,"nodeType":"100","messageId":"101","endLine":407,"endColumn":31},{"ruleId":"98","severity":1,"message":"99","line":454,"column":17,"nodeType":"100","messageId":"101","endLine":454,"endColumn":19},{"ruleId":"98","severity":1,"message":"99","line":465,"column":80,"nodeType":"100","messageId":"101","endLine":465,"endColumn":82},{"ruleId":"102","severity":1,"message":"103","line":531,"column":48,"nodeType":"104","messageId":"105","endLine":531,"endColumn":50},{"ruleId":"98","severity":1,"message":"99","line":551,"column":27,"nodeType":"100","messageId":"101","endLine":551,"endColumn":29},{"ruleId":"98","severity":1,"message":"99","line":553,"column":32,"nodeType":"100","messageId":"101","endLine":553,"endColumn":34},{"ruleId":"98","severity":1,"message":"99","line":553,"column":81,"nodeType":"100","messageId":"101","endLine":553,"endColumn":83},{"ruleId":"98","severity":1,"message":"99","line":567,"column":27,"nodeType":"100","messageId":"101","endLine":567,"endColumn":29},{"ruleId":"108","severity":1,"message":"109","line":572,"column":11,"nodeType":"110","endLine":572,"endColumn":68},{"ruleId":"94","severity":1,"message":"111","line":8,"column":8,"nodeType":"96","messageId":"97","endLine":8,"endColumn":14},{"ruleId":"94","severity":1,"message":"112","line":12,"column":8,"nodeType":"96","messageId":"97","endLine":12,"endColumn":19},{"ruleId":"94","severity":1,"message":"113","line":13,"column":8,"nodeType":"96","messageId":"97","endLine":13,"endColumn":17},{"ruleId":"98","severity":1,"message":"99","line":42,"column":18,"nodeType":"100","messageId":"101","endLine":42,"endColumn":20},{"ruleId":"98","severity":1,"message":"99","line":65,"column":43,"nodeType":"100","messageId":"101","endLine":65,"endColumn":45},{"ruleId":"98","severity":1,"message":"99","line":65,"column":66,"nodeType":"100","messageId":"101","endLine":65,"endColumn":68},{"ruleId":"98","severity":1,"message":"99","line":82,"column":14,"nodeType":"100","messageId":"101","endLine":82,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":146,"column":41,"nodeType":"100","messageId":"101","endLine":146,"endColumn":43},{"ruleId":"108","severity":1,"message":"109","line":149,"column":11,"nodeType":"110","endLine":149,"endColumn":68},{"ruleId":"108","severity":1,"message":"109","line":171,"column":9,"nodeType":"110","endLine":171,"endColumn":66},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":1,"nodeType":"120","endLine":14,"endColumn":3},{"ruleId":"94","severity":1,"message":"121","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":17},{"ruleId":"94","severity":1,"message":"122","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":24},{"ruleId":"94","severity":1,"message":"123","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":24},{"ruleId":"94","severity":1,"message":"124","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":22},{"ruleId":"94","severity":1,"message":"125","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":18},{"ruleId":"94","severity":1,"message":"126","line":11,"column":9,"nodeType":"96","messageId":"97","endLine":11,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":22,"column":27,"nodeType":"100","messageId":"101","endLine":22,"endColumn":29},{"ruleId":"98","severity":1,"message":"99","line":25,"column":16,"nodeType":"100","messageId":"101","endLine":25,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":39,"column":62,"nodeType":"104","messageId":"105","endLine":39,"endColumn":64},{"ruleId":"102","severity":1,"message":"103","line":45,"column":34,"nodeType":"104","messageId":"105","endLine":45,"endColumn":36},{"ruleId":"102","severity":1,"message":"103","line":65,"column":63,"nodeType":"104","messageId":"105","endLine":65,"endColumn":65},{"ruleId":"102","severity":1,"message":"103","line":66,"column":50,"nodeType":"104","messageId":"105","endLine":66,"endColumn":52},{"ruleId":"98","severity":1,"message":"99","line":67,"column":36,"nodeType":"100","messageId":"101","endLine":67,"endColumn":38},{"ruleId":"98","severity":1,"message":"127","line":73,"column":22,"nodeType":"100","messageId":"101","endLine":73,"endColumn":24},{"ruleId":"128","severity":1,"message":"129","line":83,"column":13,"nodeType":"130","messageId":"131","endLine":83,"endColumn":77},{"ruleId":"98","severity":1,"message":"99","line":97,"column":20,"nodeType":"100","messageId":"101","endLine":97,"endColumn":22},{"ruleId":"98","severity":1,"message":"99","line":103,"column":21,"nodeType":"100","messageId":"101","endLine":103,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":115,"column":39,"nodeType":"100","messageId":"101","endLine":115,"endColumn":41},{"ruleId":"108","severity":1,"message":"109","line":118,"column":9,"nodeType":"110","endLine":118,"endColumn":67},{"ruleId":"98","severity":1,"message":"99","line":123,"column":46,"nodeType":"100","messageId":"101","endLine":123,"endColumn":48},{"ruleId":"108","severity":1,"message":"109","line":126,"column":9,"nodeType":"110","endLine":126,"endColumn":67},{"ruleId":"108","severity":1,"message":"109","line":166,"column":9,"nodeType":"110","endLine":166,"endColumn":67},"no-unused-vars","'ArbitratorContract' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'DialogTitle' is defined but never used.","'TextField' is defined but never used.","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Typography' is defined but never used.","'PropTypes' is defined but never used.","Expected '!==' and instead saw '!='.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]